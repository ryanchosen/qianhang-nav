{"version":3,"sources":["main.js"],"names":["x","localStorage","getItem","xObject","JSON","parse","length","hashMap","logo","logoType","url","processUrl","replace","processLogo","toUpperCase","$siteList","$","$lastList","find","render","forEach","item","index","insertBefore","on","e","preventDefault","currentTarget","dataset","id","splice","remove","window","prompt","console","log","match","push","onbeforeunload","string","stringify","setItem","val","document","key","keyItem","filter","open"],"mappings":"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","file":"main.7ec4f837.js","sourceRoot":"..\\src","sourcesContent":["const x = localStorage.getItem(\"x\");\r\nlet xObject = JSON.parse(x);\r\n// 如果数组为空就给null\r\nif (xObject && xObject.length === 0) {\r\n  xObject = null;\r\n}\r\n// 初始化数据\r\nconst hashMap = xObject || [\r\n  {\r\n    logo:\r\n      \"https://cdnfile.aixifan.com/static/common/widget/header/img/acfunlogo.11a9841251f31e1a3316.svg\",\r\n    logoType: \"image\",\r\n    url: \"https://www.acfun.cn/\",\r\n  },\r\n  {\r\n    logo:\r\n      \"http://5b0988e595225.cdn.sohucs.com/images/20191016/ec602e85a23d443fa1184a87db3b5d2e.jpeg\",\r\n    logoType: \"image\",\r\n    url: \"https://www.bilibili.com\",\r\n  },\r\n  {\r\n    logo: \"https://w1.hoopchina.com.cn/images/pc/old/hp_logo_sports.png\",\r\n    logoType: \"image\",\r\n    url: \"https://www.hupu.com\",\r\n  },\r\n];\r\n// 美化用户输入的url，去头去尾让它在页面展示时美观\r\nlet processUrl = (url) => {\r\n  return url\r\n    .replace(/^((http:\\/\\/)|(https:\\/\\/))(www.)?/, \"\")\r\n    .replace(/\\/.*/, \"\");\r\n};\r\n// 让初始化的数据把图片放在logo位置，用户新建的网址则提取第一个字母\r\nlet processLogo = (logoType, logo, url) => {\r\n  if (logoType && logoType === \"image\") {\r\n    return `<img src=\"${logo}\" alt=\"\">`;\r\n  } else {\r\n    return processUrl(url)[0].toUpperCase();\r\n  }\r\n};\r\nlet $siteList = $(\".siteList\");\r\nlet $lastList = $siteList.find(\".addSite\");\r\nlet render = () => {\r\n  hashMap.forEach((item, index) => {\r\n    $(`<li>\r\n          <a href=\"${item.url}\">\r\n              <div class=\"site\">\r\n                  <div class=\"logo\">${processLogo(\r\n                    item.logoType,\r\n                    item.logo,\r\n                    item.url\r\n                  )}</div>\r\n                  <div class=\"link\">${processUrl(item.url)}</div>\r\n                  <svg class=\"icon close\" aria-hidden=\"true\" data-id=${index}>\r\n                    <use xlink:href=\"#icon-close\"></use>\r\n                  </svg>\r\n              </div>\r\n          </a>\r\n      </li>`).insertBefore($lastList);\r\n  });\r\n  // 右上角的点×关闭\r\n  $siteList.find(\".site .icon\").on(\"click\", (e) => {\r\n    e.preventDefault();\r\n    let index = e.currentTarget.dataset.id;\r\n    hashMap.splice(index, 1); // 改数据\r\n    $siteList.find(\"li:not(:last-child)\").remove(); // 清空页面dom\r\n    render();\r\n  });\r\n};\r\nrender();\r\n\r\n$(\".addButton\").on(\"click\", () => {\r\n  let url = window.prompt(\"你要添加的网址是啥\", \"https://\");\r\n  console.log(url);\r\n  if (url && url !== \"https://\" && url !== \"http://\") {\r\n    if (!url.match(/^(http|https):\\/\\//)) {\r\n      url = \"https://\" + url;\r\n    }\r\n    // 换成正则表达式\r\n    let $siteList = $(\".siteList\");\r\n    hashMap.push({\r\n      logo: url[0],\r\n      logoType: \"text\",\r\n      url,\r\n    });\r\n    $siteList.find(\"li:not(:last-child)\").remove(); // 清空页面dom\r\n    render();\r\n  }\r\n});\r\n\r\nwindow.onbeforeunload = () => {\r\n  let string = JSON.stringify(hashMap);\r\n  // console.log(typeof hashMap)\r\n  // console.log('数据:'+hashMap)\r\n  // console.log(typeof string)\r\n  // console.log('字符串:'+string)\r\n  window.localStorage.setItem(\"x\", string);\r\n  $(\"input\").val(\"\");\r\n};\r\n\r\n// 空白处点击键盘可以把数组中第一个返回的网站打开\r\n// 假如baidu与bilibili则，哪个在前就打开哪个\r\n$(document).on(\"keypress\", (e) => {\r\n  const { key } = e;\r\n  let keyItem = hashMap.filter((item) => {\r\n    return key === processUrl(item.url)[0];\r\n  })[0];\r\n  console.log(keyItem);\r\n  window.open(keyItem.url)\r\n});\r\n"]}